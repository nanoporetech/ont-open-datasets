{"componentChunkName":"component---src-templates-blog-post-js","path":"/katuali_human_pipeline/","result":{"data":{"site":{"siteMetadata":{"title":"Oxford Nanopore Technologies Open Datasets"}},"markdownRemark":{"id":"19fe4886-e1c7-54e7-9918-f88ec262d711","excerpt":"Our recent GM24385 data release contains data from multiple\nflowcells and analytes for both the R9.4.1 and R10.3 flowcell chemistries. The\nuploaded data…","html":"<p>Our recent <a href=\"/ont-open-datasets/gm24385_2020.09\">GM24385 data release</a> contains data from multiple\nflowcells and analytes for both the R9.4.1 and R10.3 flowcell chemistries. The\nuploaded data contains the primary sequencer output data; the full MinKNOW\noutput directory for the runs is included verbatim. The release seperately\ncontains a directory structure resulting from the application of a snakemake\nanalysis pipeline. Here we provide details of how this workflow was executed\nand its outputs.</p>\n<h3>Background</h3>\n<p><a href=\"https://github.com/nanoporetech/katuali\">Katuali</a> is a set of\n<a href=\"https://snakemake.readthedocs.io/\">Snakemake</a> analysis pipelines for basic\nanalysis of nanopore sequencing data. It can perform basic tasks such as\nbasecalling, alignment of reads, assembly, and evaluation and benchmarking of\nsuch algorithms. This can be performed at scale on large compute clusters on\nlocal or cloud infrastructure.</p>\n<p>For the GM24385 release Katuali was used to construct secondary analyses in a\ndocumented and reproducible fashion. As katuali is open source, it is possible\nfor users to reconstruct these secondary analyses for themselves from the\nprimary data. We have uploaded the results of these analysis to provide\nbenchmarking data and make available useful resources for others to perform\nfurther analysis.</p>\n<p>The Katuali pipeline used for the <a href=\"/ont-open-datasets/gm24385_2020.09\">GM24385 data release</a>\nprovides four main outputs:</p>\n<ol>\n<li>Align basecalls to reference sequence retaining all primary, secondary and\nsupplementary alignments are kept</li>\n<li>Filter .bam file to list of regions defined in configuration file retaining\nonly primary alignments.</li>\n<li>Produce read statistics from per-region .bams.</li>\n<li>Repack/group source .fast5 files according to primary alignment .bams to\nproduce per-region .fast5 file sets.</li>\n</ol>\n<p>These outputs provide added value to the primary data, and users can extend and\nadapt the katuali pipeline and configuration to calculate additional outputs.</p>\n<h3>Katuali configuration for GM24385 release</h3>\n<p>Katuali builds on native Snakemake functionality to provide a way of mapping\nand analysis pipeline across multiple inputs with minimal fuss. How this is\nachieved is describe in the katuali <a href=\"https://nanoporetech.github.io/katuali/examples.html#automatic-generation-of-custom-pipeline-targets\">documentation</a>. This functionality can be used to simulataneously\nprocess data from multiple flowcells.</p>\n<p>A single configuration file is used to control Katuali’s behaviour: what input\ndata it will use, what pipelines it will run, and the configuration of external\nprograms that it runs. The configuration file can be created from the\nprovided template using the <a href=\"https://nanoporetech.github.io/katuali/tests.html#predefined-workflows\">katuali_config</a>\ncommand.</p>\n<p>For the purposes of the GM24385 data release this file was then customised with\ndetails of the input datasets (the <code class=\"language-text\">.fast5</code>/<code class=\"language-text\">.fastq</code> files from MinKNOW) and a\ndescription of the outputs that were required. The resulting files are included\nin the data release under the <code class=\"language-text\">config</code> folder at:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">s3://ont-open-data/gm24385_2020.09/config/</code></pre></div>\n<p>See our <a href=\"/ont-open-datasets/tutorials/\">tutorials</a> page for details on how to download these\nfiles.</p>\n<h4>Setup of input directories</h4>\n<p>Katuali can be used to perform basecalling from <code class=\"language-text\">.fast5</code> files to produce\nstandard <code class=\"language-text\">.fastq</code> sequence files. However since basecalling was performed\nduring the sequencing experiments we can sidestep the basecalling procedure\nand simply bootstrap the Katuali output directory with the alread computed\nbasecalls. To do this the <code class=\"language-text\">setup_katuali.sh</code> program, located at:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">s3://ont-open-data/gm24385_2020.09/config/setup_katuali.sh</code></pre></div>\n<p>was used. This prepares a directory structure that Katuali would otherwise\nproduce itself whilst avoiding some expensive computations. Seperate top-level\nKatuali directories were created to group flowcell data from R9.4.1 and R10.3\nflowcells.</p>\n<h4>Important aspects of configuration file</h4>\n<p>The template configuration files need only minor customisation for the GM24385\ndataset. Firstly the <code class=\"language-text\">DATA:</code> section requires specifying, for example the\nR9.4.1 file contains an entries such as the following (one per flowcell):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DATA:\n    &#39;20200914_1356_6F_PAF26223_da14221a&#39;:\n        &#39;REFERENCE&#39;: &#39;ref/GCA_000001405.15_GRCh38_no_alt_analysis_set.fasta&#39;\n        &#39;SPLIT_FAST5_REGIONS&#39;:\n            [&#39;chr1&#39;, &#39;chr2&#39;, &#39;chr3&#39;, &#39;chr4&#39;, &#39;chr5&#39;, &#39;chr6&#39;, &#39;chr7&#39;, &#39;chr8&#39;, &#39;chr9&#39;, &#39;chr10&#39;,\n            &#39;chr11&#39;, &#39;chr12&#39;, &#39;chr13&#39;, &#39;chr14&#39;, &#39;chr15&#39;, &#39;chr16&#39;, &#39;chr17&#39;, &#39;chr18&#39;, &#39;chr19&#39;, &#39;chr20&#39;,\n            &#39;chr21&#39;, &#39;chr22&#39;, &#39;chrX&#39;, &#39;chrY&#39;]</code></pre></div>\n<p>The first item here is simply the name MinKNOW output directory. The\n<code class=\"language-text\">REFERENCE</code> entry is a relative filepath to the genomic reference sequence\nappropriate to the sample; in the case of the GM24385 dataset this is simply\nthe human reference genome. The final entry in the above is a list of sequence\nidentifies (corresponding to entries in the <code class=\"language-text\">REFERENCE</code> file) indicating how\nthe dataset should be separated after alignment of sequences to the reference.</p>\n<p>The second important customisation of the template configuration file is the specification\nof which output files should be created. This appears in the <code class=\"language-text\">PIPELINES</code> section:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PIPELINES:\n    all_initial: [\n        # do alignments, split bams and fast5s by regions\n        &quot;{DATA}/guppy_v4.0.11_r10.3_hac_prom/align_unfiltered/{SPLIT_FAST5_REGIONS}/fast5/&quot;,\n    ]\n    all_add_alignment_stats: [\n        # calculate alignment stats\n        &quot;{DATA}/guppy_v4.0.11_r10.3_hac_prom/align_unfiltered/calls2ref_stats.txt&quot;,\n        &quot;{DATA}/guppy_v4.0.11_r10.3_hac_prom/align_unfiltered/{SPLIT_FAST5_REGIONS}/calls2ref_stats.txt&quot;\n    ]</code></pre></div>\n<p>What these so-called “targets” cause Katuali and Snakemake to calculate is discussed below.\nTo have katuali perform the calculation for all items in the <code class=\"language-text\">DATA</code> section it is sufficient\nto run katuali with, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">katuali all_initial --configfile ../../config/r9.4.1.config</code></pre></div>\n<p>from the directory corresponding to:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">s3://ont-open-data/gm24385_2020.09/analysis/r9.4.1/</code></pre></div>\n<p>Katuali replaces the <code class=\"language-text\">{DATA}</code> and <code class=\"language-text\">{SPLIT_FAST5_REGIONS}</code> tags in the listings above with\nall possible values listed in the <code class=\"language-text\">DATA</code> section of the configuration file. The resulting\nmatrix of targets is given to Snakemake to perform the workflows.</p>\n<h3>Pipeline data flow</h3>\n<h3>Directory listing and description</h3>","frontmatter":{"title":"Katuali analysis pipeline for preparing human datasets","date":"September 22, 2020","description":"In this post we detail the open source analysis pipeline responsible for generating the GM24385 dataset."}}},"pageContext":{"slug":"/katuali_human_pipeline/","previous":{"fields":{"slug":"/gm24385_2020.09/"},"frontmatter":{"title":"GM24385 Dataset Release"}},"next":null}},"staticQueryHashes":["1246554614","1462070832","2841359383"]}